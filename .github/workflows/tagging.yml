name: Push Build

on:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: windows-latest
    strategy:
      matrix:
        static: [OFF]

    steps:
    - name: Checkout with submodules
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive
        clean: true

    - uses: nuget/setup-nuget@v1
      with:
        nuget-api-key: ${{ secrets.nuget_apikey }}
        nuget-version: '5.x'

    - name: Setup MSVC
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: amd64
        toolset: 16.0

    - name: CMake
      run: |
        mkdir build
        cd build
        cmake -G "Visual Studio 16 2019" -D XLNT_CXX_LANG=17 -D STATIC=${{ matrix.static }} -D BENCHMARKS=ON -D SAMPLES=ON -D BENCHMARKS=ON ..

    - name: Build
      working-directory: build
      run: |
        cmake --build . --config Debug
        cmake --build . --config Release

    - name: Test
      working-directory: build
      run: |
        tests\Debug\xlnt.test.exe
        samples\Debug\sample-documentation.exe

    #- name: Coverage
    #  working-directory: build
    #  run: |
    #    lcov --directory source/CMakeFiles/xlnt.dir --capture --output-file coverage.info --base-directory ../source --no-external --gcov-tool /usr/bin/gcov-6
    #    lcov --output-file coverage.info --remove coverage.info source/detail/serialization/miniz.cpp
    #    i=$(dirname $(pwd))
    #    sed -i "s|$i/||" coverage.info
    #    cd ..
    #    coveralls-lcov build/coverage.info

    - name: extract tag name
      uses: olegtarasov/get-tag@v2.1
      id: tagname
      with:
        tagregex: "([0-9\\.]+.*)"
        tagregexgroup: 1

    - name: Build Nuget Package
      run: nuget pack bundle\nuget\xlnt.nuspec -OutputFileNamesWithoutVersion -properties version=${{env.git_tag_name}} -properties id=xlnt -OutputDirectory dist\ -properties repository=${{github.repository}} -properties commit=${{ github.sha }} -properties branch=${{ github.ref }} -BasePath .


    - name: Nuget Package
      run: nuget push dist\*.nupkg -NoSymbols -source https://api.nuget.org/v3/index.json -apikey ${{ secrets.nuget_apikey }}
